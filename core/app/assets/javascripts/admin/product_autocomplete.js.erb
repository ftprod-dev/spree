format_product_autocomplete = function(item) {
    var html = "";

    image_url = item.data['image_url'];
    if (image_url) {
        html += '<img src="' + image_url + '"/>';
    }



    html += '<div class="params">';
    html += '<div class="name">' + item.data['name'] + '</div>';
    html += '<span class="sku_lbl">'       + Spree.translations.sku     + "</span>:"
          + '<span class="sku_value">'     + item.data['sku']           + "</span>";

    extra_class = (item.data['count_on_hand'] > 0 ? 'positive' : 'negative');
    html += '<span class="on_hand_lbl">'   + Spree.translations.on_hand + "</span>:"
          + '<span class="on_hand_value ' + extra_class + '">' + item.data['count_on_hand'] + "</span>";
    html += "</div>";

    return html;
}

$.fn.product_autocomplete = function(){
    return this.each(function() {
        $(this).autocomplete({
            source: function(request, response) {
                params = {
                    ref: this.element.val(),
                    json_format: 'autocomplete',
                    authenticity_token: encodeURIComponent($('meta[name=csrf-token]').attr("content"))
                };

                url = Spree.routes.product_search + '?' + jQuery.param(params);

                $.get(url, response);
            },
            minLength: 2,
            focus: function(event, ui) {
                $(this).val(ui.item.label);
                return false;
            },
            select: function(event, ui) {
                $(this).val(ui.item.label);

                target_id = $(this).data('target-id') || 'add_variant_id';
                $('#' + target_id).val(ui.item.data['id']);

                return false;
            }
        });

        $(this).focus(function () {
            obj = $(this).data("autocomplete")
            if (obj.top_variants === undefined) {
                params = {
                    top: 3,
                    json_format: 'autocomplete',
                    authenticity_token: encodeURIComponent($('meta[name=csrf-token]').attr("content"))
                };

                url = Spree.routes.product_search + '?' + jQuery.param(params);

                $.ajax({
                    url: url,
                    async: false,
                    success: function (data) {
                        obj.top_variants = data;
                    }
                });
            }
            obj._search(obj.top_variants);
        });

        $(this).data("autocomplete")._renderItem = function(ul, item) {
            $(ul).addClass('ac_results');
            html = format_product_autocomplete(item);
            return $("<li></li>")
                .data("item.autocomplete", item)
                .append("<a>" + html + "</a>")
                .appendTo(ul);
        }

        $(this).data("autocomplete")._resizeMenu = function() {
            var ul = this.menu.element;
            ul.outerWidth(this.element.outerWidth());
        }
    });
}
